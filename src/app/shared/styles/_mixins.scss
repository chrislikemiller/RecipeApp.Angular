// ============================================================================
// WRITTEN BY AI - SCSS MIXINS - Reusable Style Patterns
// ============================================================================

@use 'sass:color';
@import 'variables';

// Flexbox Utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// Grid Utilities
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-columns($columns) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $spacing-md;
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  border: none;
  cursor: pointer;
  outline: none;
  transition: all $duration-normal $ease-out;
  user-select: none;
  white-space: nowrap;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin button-size($height, $padding-x, $font-size) {
  height: $height;
  padding: 0 $padding-x;
  font-size: $font-size;
  border-radius: $radius-md;
  gap: $spacing-sm;
}

@mixin button-primary {
  @include button-base;
  background: rgba($accent-primary, 0.5);
  color: $text-primary;
  border: 1px solid rgba($accent-primary, 0.3);
  
  &:hover:not(:disabled) {
    background: rgba($accent-primary, 0.75);
    border-color: rgba($accent-primary, 0.5);
  }
  
  &:active:not(:disabled) {
    background: rgba($accent-primary, 0.95);
    border-color: rgba($accent-primary, 0.6);
  }
}

@mixin button-secondary {
  @include button-base;
  background: $surface-light;
  color: $text-primary;
  border: 1px solid $border-color;
  
  &:hover:not(:disabled) {
    background: color.adjust($surface-light, $lightness: -5%);
    border-color: color.adjust($border-color, $lightness: -10%);
  }
  
  &:active:not(:disabled) {
    background: color.adjust($surface-light, $lightness: -8%);
    border-color: color.adjust($border-color, $lightness: -15%);
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: $text-secondary;
  
  &:hover:not(:disabled) {
    background: $hover-overlay;
    color: $text-primary;
  }
  
  &:active:not(:disabled) {
    background: color.adjust($hover-overlay, $alpha: 0.5);
    color: $text-primary;
  }
}

// Input Mixins
@mixin input-base {
  width: 100%;
  font-family: $font-family-primary;
  background: $primary-light;
  color: $text-primary;
  border: 1px solid $border-color;
  border-radius: $radius-md;
  padding: 0 $spacing-md;
  outline: none;
  transition: all $duration-normal $ease-out;
  
  &::placeholder {
    color: $text-hint;
  }
  
  &:focus {
    border-color: $accent-primary;
    box-shadow: 0 0 0 3px rgba($accent-primary, 0.15);
    background: color.adjust($primary-light, $lightness: 2%);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: color.adjust($primary-light, $lightness: -5%);
  }
}

@mixin input-size($height, $font-size) {
  height: $height;
  font-size: $font-size;
}

// Card Mixins
@mixin card-base {
  background: $primary-light;
  border: 1px solid $border-color;
  border-radius: $card-border-radius;
  box-shadow: $box-shadow-sm;
  overflow: hidden;
  transition: all $duration-normal $ease-out;
}

@mixin card-hover {
  &:hover {
    box-shadow: $box-shadow-md;
    // transform: translateY(-1px);
    border-color: color.adjust($border-color, $lightness: -10%);
  }
}

@mixin card-interactive {
  @include card-base;
  @include card-hover;
  cursor: pointer;
}

// Text Utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Focus Styles
@mixin focus-ring($color: $accent-primary) {
  outline: 2px solid transparent;
  outline-offset: 2px;
  
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Hover Effects
@mixin hover-lift {
  transition: transform $duration-normal $ease-out;
  
  &:hover {
    transform: translateY(-2px);
  }
}

@mixin hover-glow($color: $accent-primary) {
  transition: box-shadow $duration-normal $ease-out;
  
  &:hover {
    box-shadow: 0 0 20px rgba($color, 0.3);
  }
}

// Loading State
@mixin loading-shimmer {
  background: linear-gradient(
    90deg,
    $primary-light 25%,
    color.adjust($primary-light, $lightness: 5%) 50%,
    $primary-light 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// Responsive Mixins
@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

// Utility Mixins
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin full-width {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
}

@mixin container($max-width: $breakpoint-xl) {
  @include full-width;
  max-width: $max-width;
  padding-left: $spacing-md;
  padding-right: $spacing-md;
  
  @include tablet-up {
    padding-left: $spacing-lg;
    padding-right: $spacing-lg;
  }
}

// Scrollbar Styling
@mixin custom-scrollbar($width: 8px) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $primary-light;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $border-color;
    border-radius: $radius-full;
    
    &:hover {
      background: color.adjust($border-color, $lightness: -10%);
    }
  }
}
