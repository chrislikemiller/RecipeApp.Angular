// ============================================================================
// WRITTEN BY AI - ANIMATIONS - Smooth Micro-interactions
// ============================================================================

@import 'variables';

// Fade Animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Scale Animations
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

// Slide Animations
@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-100%);
  }
}

@keyframes slideOutRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

// Bounce Animation
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }
  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

// Pulse Animation
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

// Spin Animation
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Shake Animation
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}

// Glow Animation
@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba($accent-primary, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba($accent-primary, 0.6), 0 0 30px rgba($accent-primary, 0.4);
  }
}

// Progress Bar Animation
@keyframes progressBar {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

// Typing Animation
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from, to {
    border-color: transparent;
  }
  50% {
    border-color: $accent-primary;
  }
}

// Utility Classes for Animations
.animate-fade-in {
  animation: fadeIn $duration-normal $ease-out;
}

.animate-fade-out {
  animation: fadeOut $duration-normal $ease-out;
}

.animate-fade-in-up {
  animation: fadeInUp $duration-normal $ease-out;
}

.animate-fade-in-down {
  animation: fadeInDown $duration-normal $ease-out;
}

.animate-scale-in {
  animation: scaleIn $duration-normal $ease-out;
}

.animate-scale-out {
  animation: scaleOut $duration-normal $ease-out;
}

.animate-slide-in-left {
  animation: slideInLeft $duration-normal $ease-out;
}

.animate-slide-in-right {
  animation: slideInRight $duration-normal $ease-out;
}

.animate-slide-out-left {
  animation: slideOutLeft $duration-normal $ease-out;
}

.animate-slide-out-right {
  animation: slideOutRight $duration-normal $ease-out;
}

.animate-bounce {
  animation: bounce 1s;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-shake {
  animation: shake 0.5s;
}

.animate-glow {
  animation: glow 2s infinite;
}

// Hover Animations
.hover-lift {
  transition: transform $duration-normal $ease-out;
  
  &:hover {
    transform: translateY(-4px);
  }
}

.hover-scale {
  transition: transform $duration-normal $ease-out;
  
  &:hover {
    transform: scale(1.05);
  }
}

.hover-rotate {
  transition: transform $duration-normal $ease-out;
  
  &:hover {
    transform: rotate(5deg);
  }
}

.hover-glow {
  transition: box-shadow $duration-normal $ease-out;
  
  &:hover {
    box-shadow: 0 0 20px rgba($accent-primary, 0.3);
  }
}

// Page Transition Classes (for Angular animations)
.page-enter {
  animation: fadeInUp $duration-slow $ease-out;
}

.page-leave {
  animation: fadeOut $duration-fast $ease-in;
}

.modal-enter {
  animation: scaleIn $duration-normal $ease-bounce;
}

.modal-leave {
  animation: scaleOut $duration-fast $ease-in;
}

.toast-enter {
  animation: slideInRight $duration-normal $ease-out;
}

.toast-leave {
  animation: slideOutRight $duration-normal $ease-in;
}

// Loading Spinner Component
.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba($accent-primary, 0.2);
  border-left: 4px solid $accent-primary;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.loading-dots {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  
  .dot {
    width: 8px;
    height: 8px;
    background: $accent-primary;
    border-radius: 50%;
    animation: pulse 1.4s infinite ease-in-out both;
    
    &:nth-child(1) { animation-delay: -0.32s; }
    &:nth-child(2) { animation-delay: -0.16s; }
    &:nth-child(3) { animation-delay: 0s; }
  }
}

// Reduce motion for accessibility
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms;
    animation-iteration-count: 1;
    transition-duration: 0.01ms;
    scroll-behavior: auto;
  }
}

// Stagger animation utility (for lists)
.stagger-children {
  > * {
    animation: fadeInUp $duration-normal $ease-out;
    animation-fill-mode: both;
  }
  
  @for $i from 1 through 10 {
    > *:nth-child(#{$i}) {
      animation-delay: #{$i * 0.1}s;
    }
  }
}
